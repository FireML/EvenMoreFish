/*
 * This file is generated by jOOQ.
 */
package com.oheers.fish.database.generated.mysql.tables.records;


import com.oheers.fish.database.generated.mysql.tables.Users;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UsersRecord extends UpdatableRecordImpl<UsersRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>${table.prefix}users.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>${table.prefix}users.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>${table.prefix}users.UUID</code>.
     */
    public void setUuid(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>${table.prefix}users.UUID</code>.
     */
    public String getUuid() {
        return (String) get(1);
    }

    /**
     * Setter for <code>${table.prefix}users.FIRST_FISH</code>.
     */
    public void setFirstFish(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>${table.prefix}users.FIRST_FISH</code>.
     */
    public String getFirstFish() {
        return (String) get(2);
    }

    /**
     * Setter for <code>${table.prefix}users.LAST_FISH</code>.
     */
    public void setLastFish(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>${table.prefix}users.LAST_FISH</code>.
     */
    public String getLastFish() {
        return (String) get(3);
    }

    /**
     * Setter for <code>${table.prefix}users.LARGEST_FISH</code>.
     */
    public void setLargestFish(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>${table.prefix}users.LARGEST_FISH</code>.
     */
    public String getLargestFish() {
        return (String) get(4);
    }

    /**
     * Setter for <code>${table.prefix}users.SHORTEST_FISH</code>.
     */
    public void setShortestFish(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>${table.prefix}users.SHORTEST_FISH</code>.
     */
    public String getShortestFish() {
        return (String) get(5);
    }

    /**
     * Setter for <code>${table.prefix}users.LARGEST_LENGTH</code>.
     */
    public void setLargestLength(Float value) {
        set(6, value);
    }

    /**
     * Getter for <code>${table.prefix}users.LARGEST_LENGTH</code>.
     */
    public Float getLargestLength() {
        return (Float) get(6);
    }

    /**
     * Setter for <code>${table.prefix}users.SHORTEST_LENGTH</code>.
     */
    public void setShortestLength(Float value) {
        set(7, value);
    }

    /**
     * Getter for <code>${table.prefix}users.SHORTEST_LENGTH</code>.
     */
    public Float getShortestLength() {
        return (Float) get(7);
    }

    /**
     * Setter for <code>${table.prefix}users.NUM_FISH_CAUGHT</code>.
     */
    public void setNumFishCaught(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>${table.prefix}users.NUM_FISH_CAUGHT</code>.
     */
    public Integer getNumFishCaught() {
        return (Integer) get(8);
    }

    /**
     * Setter for <code>${table.prefix}users.TOTAL_FISH_LENGTH</code>.
     */
    public void setTotalFishLength(Float value) {
        set(9, value);
    }

    /**
     * Getter for <code>${table.prefix}users.TOTAL_FISH_LENGTH</code>.
     */
    public Float getTotalFishLength() {
        return (Float) get(9);
    }

    /**
     * Setter for <code>${table.prefix}users.COMPETITIONS_WON</code>.
     */
    public void setCompetitionsWon(Integer value) {
        set(10, value);
    }

    /**
     * Getter for <code>${table.prefix}users.COMPETITIONS_WON</code>.
     */
    public Integer getCompetitionsWon() {
        return (Integer) get(10);
    }

    /**
     * Setter for <code>${table.prefix}users.COMPETITIONS_JOINED</code>.
     */
    public void setCompetitionsJoined(Integer value) {
        set(11, value);
    }

    /**
     * Getter for <code>${table.prefix}users.COMPETITIONS_JOINED</code>.
     */
    public Integer getCompetitionsJoined() {
        return (Integer) get(11);
    }

    /**
     * Setter for <code>${table.prefix}users.FISH_SOLD</code>.
     */
    public void setFishSold(Integer value) {
        set(12, value);
    }

    /**
     * Getter for <code>${table.prefix}users.FISH_SOLD</code>.
     */
    public Integer getFishSold() {
        return (Integer) get(12);
    }

    /**
     * Setter for <code>${table.prefix}users.MONEY_EARNED</code>.
     */
    public void setMoneyEarned(Double value) {
        set(13, value);
    }

    /**
     * Getter for <code>${table.prefix}users.MONEY_EARNED</code>.
     */
    public Double getMoneyEarned() {
        return (Double) get(13);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UsersRecord
     */
    public UsersRecord() {
        super(Users.USERS);
    }

    /**
     * Create a detached, initialised UsersRecord
     */
    public UsersRecord(Integer id, String uuid, String firstFish, String lastFish, String largestFish, String shortestFish, Float largestLength, Float shortestLength, Integer numFishCaught, Float totalFishLength, Integer competitionsWon, Integer competitionsJoined, Integer fishSold, Double moneyEarned) {
        super(Users.USERS);

        setId(id);
        setUuid(uuid);
        setFirstFish(firstFish);
        setLastFish(lastFish);
        setLargestFish(largestFish);
        setShortestFish(shortestFish);
        setLargestLength(largestLength);
        setShortestLength(shortestLength);
        setNumFishCaught(numFishCaught);
        setTotalFishLength(totalFishLength);
        setCompetitionsWon(competitionsWon);
        setCompetitionsJoined(competitionsJoined);
        setFishSold(fishSold);
        setMoneyEarned(moneyEarned);
        resetChangedOnNotNull();
    }
}
