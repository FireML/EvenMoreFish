/*
 * This file is generated by jOOQ.
 */
package com.oheers.fish.database.generated.mysql.tables.records;


import com.oheers.fish.database.generated.mysql.tables.UserFishStats;

import java.time.LocalDateTime;

import org.jooq.Record3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class UserFishStatsRecord extends UpdatableRecordImpl<UserFishStatsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>${table.prefix}user_fish_stats.FISH_NAME</code>.
     */
    public void setFishName(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.FISH_NAME</code>.
     */
    public String getFishName() {
        return (String) get(0);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.FISH_RARITY</code>.
     */
    public void setFishRarity(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.FISH_RARITY</code>.
     */
    public String getFishRarity() {
        return (String) get(1);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.USER_ID</code>.
     */
    public void setUserId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.USER_ID</code>.
     */
    public Integer getUserId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.FIRST_CATCH_TIME</code>.
     */
    public void setFirstCatchTime(LocalDateTime value) {
        set(3, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.FIRST_CATCH_TIME</code>.
     */
    public LocalDateTime getFirstCatchTime() {
        return (LocalDateTime) get(3);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.SHORTEST_LENGTH</code>.
     */
    public void setShortestLength(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.SHORTEST_LENGTH</code>.
     */
    public Float getShortestLength() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.LONGEST_LENGTH</code>.
     */
    public void setLongestLength(Float value) {
        set(5, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.LONGEST_LENGTH</code>.
     */
    public Float getLongestLength() {
        return (Float) get(5);
    }

    /**
     * Setter for <code>${table.prefix}user_fish_stats.QUANTITY</code>.
     */
    public void setQuantity(Integer value) {
        set(6, value);
    }

    /**
     * Getter for <code>${table.prefix}user_fish_stats.QUANTITY</code>.
     */
    public Integer getQuantity() {
        return (Integer) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<String, String, Integer> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached UserFishStatsRecord
     */
    public UserFishStatsRecord() {
        super(UserFishStats.USER_FISH_STATS);
    }

    /**
     * Create a detached, initialised UserFishStatsRecord
     */
    public UserFishStatsRecord(String fishName, String fishRarity, Integer userId, LocalDateTime firstCatchTime, Float shortestLength, Float longestLength, Integer quantity) {
        super(UserFishStats.USER_FISH_STATS);

        setFishName(fishName);
        setFishRarity(fishRarity);
        setUserId(userId);
        setFirstCatchTime(firstCatchTime);
        setShortestLength(shortestLength);
        setLongestLength(longestLength);
        setQuantity(quantity);
        resetChangedOnNotNull();
    }
}
