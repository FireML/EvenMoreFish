/*
 * This file is generated by jOOQ.
 */
package com.oheers.fish.database.generated.mysql.tables.records;


import com.oheers.fish.database.generated.mysql.tables.Competitions;

import java.time.LocalDateTime;

import org.jooq.Record1;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes", "this-escape" })
public class CompetitionsRecord extends UpdatableRecordImpl<CompetitionsRecord> {

    private static final long serialVersionUID = 1L;

    /**
     * Setter for <code>${table.prefix}competitions.ID</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.ID</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>${table.prefix}competitions.COMPETITION_NAME</code>.
     */
    public void setCompetitionName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.COMPETITION_NAME</code>.
     */
    public String getCompetitionName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>${table.prefix}competitions.WINNER_UUID</code>.
     */
    public void setWinnerUuid(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.WINNER_UUID</code>.
     */
    public String getWinnerUuid() {
        return (String) get(2);
    }

    /**
     * Setter for <code>${table.prefix}competitions.WINNER_FISH</code>.
     */
    public void setWinnerFish(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.WINNER_FISH</code>.
     */
    public String getWinnerFish() {
        return (String) get(3);
    }

    /**
     * Setter for <code>${table.prefix}competitions.WINNER_SCORE</code>.
     */
    public void setWinnerScore(Float value) {
        set(4, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.WINNER_SCORE</code>.
     */
    public Float getWinnerScore() {
        return (Float) get(4);
    }

    /**
     * Setter for <code>${table.prefix}competitions.CONTESTANTS</code>.
     */
    public void setContestants(String value) {
        set(5, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.CONTESTANTS</code>.
     */
    public String getContestants() {
        return (String) get(5);
    }

    /**
     * Setter for <code>${table.prefix}competitions.START_TIME</code>.
     */
    public void setStartTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.START_TIME</code>.
     */
    public LocalDateTime getStartTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>${table.prefix}competitions.END_TIME</code>.
     */
    public void setEndTime(LocalDateTime value) {
        set(7, value);
    }

    /**
     * Getter for <code>${table.prefix}competitions.END_TIME</code>.
     */
    public LocalDateTime getEndTime() {
        return (LocalDateTime) get(7);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CompetitionsRecord
     */
    public CompetitionsRecord() {
        super(Competitions.COMPETITIONS);
    }

    /**
     * Create a detached, initialised CompetitionsRecord
     */
    public CompetitionsRecord(Integer id, String competitionName, String winnerUuid, String winnerFish, Float winnerScore, String contestants, LocalDateTime startTime, LocalDateTime endTime) {
        super(Competitions.COMPETITIONS);

        setId(id);
        setCompetitionName(competitionName);
        setWinnerUuid(winnerUuid);
        setWinnerFish(winnerFish);
        setWinnerScore(winnerScore);
        setContestants(contestants);
        setStartTime(startTime);
        setEndTime(endTime);
        resetChangedOnNotNull();
    }
}
